- name: Install Docker
  import_role:
    name: geerlingguy.docker

- name: Create directories
  block:
    - name: Create Frigate directory
      ansible.builtin.file:
        path: "{{ frigate_config_dir }}"
        state: directory
        mode: '0755'

    - name: Create Caddy directory
      ansible.builtin.file:
        path: "{{ frigate_config_dir }}/caddy"
        state: directory
        mode: '0755'

    - name: Create oauth2-proxy directory
      ansible.builtin.file:
        path: "{{ frigate_config_dir }}/oauth2-proxy"
        state: directory
        mode: '0755'

    - name: Create custom-templates directory
      ansible.builtin.file:
        path: "{{ frigate_config_dir }}/oauth2-proxy/custom-templates"
        state: directory
        mode: '0755'

    - name: Create frigate directory
      ansible.builtin.file:
        path: "{{ frigate_config_dir }}/frigate"
        state: directory
        mode: '0755'

    - name: Create frigate config directory
      ansible.builtin.file:
        path: "{{ frigate_config_dir }}/frigate/config"
        state: directory
        mode: '0755'

- name: Copy static resources
  block:
    - name: Copy custom sign in page 
      ansible.builtin.copy:
        src: "files/sign_in.html"
        dest: "{{ frigate_config_dir }}/oauth2-proxy/custom-templates/sign_in.html"
        mode: '0755'

    - name: Copy frigate logo for sign in page
      ansible.builtin.copy:
        src: "files/logo.svg"
        dest: "{{ frigate_config_dir }}/oauth2-proxy/custom-templates/logo.svg"
        mode: '0755'

- name: Deploy templates
  block:
    - name: Deploy Docker Compose template
      template:
        src: "templates/docker-compose.yml.j2"
        dest: "{{ frigate_config_dir }}/docker-compose.yml"
        owner: root
        group: root
        mode: "0644"

    - name: Deploy Caddyfile template
      template:
        src: "templates/Caddyfile.j2"
        dest: "{{ frigate_config_dir }}/caddy/Caddyfile"
        owner: root
        group: root
        mode: "0644"

    - name: Deploy oauth2-proxy template
      template:
        src: "templates/oauth2-proxy.cfg.j2"
        dest: "{{ frigate_config_dir }}/oauth2-proxy/oauth2-proxy.cfg"
        mode: "0755"

    - name: Check if Frigate config exists
      stat:
        path: "{{ frigate_config_dir }}/frigate/config/config.yaml"
      register: frigate_config_file

    - name: Deploy Frigate config template if it does not exist
      template:
        src: "templates/frigate_config.yml.j2"
        dest: "{{ frigate_config_dir }}/frigate/config/config.yaml"
        mode: "0755"
      when: not frigate_config_file.stat.exists

- include_tasks: frigate_notify.yml
  when: frigate_notify_enabled == true

- include_tasks: neolink.yml
  when: neolink_enabled == true

- name: Tear down existing services
  community.docker.docker_compose_v2:
    project_src: /frigate
    state: absent

- name: Create and start services
  community.docker.docker_compose_v2:
    project_src: "{{ frigate_config_dir }}"
  register: output

- name: Show results
  ansible.builtin.debug:
    var: output

- name: Verify that web and db services are running
  ansible.builtin.assert:
    that:
      - web_container.State == 'running'
      - db_container.State == 'running'
  vars:
    web_container: >-
      {{ output.containers | selectattr("Service", "equalto", "web") | first }}
    db_container: >-
      {{ output.containers | selectattr("Service", "equalto", "db") | first }}